function [  ] = AnalyseSampleQNI(SampleDir,onlyROI)
    %ANALYSEIMAGE Summary of this function goes here
    %   onlyROI  1:  only check ROI
    %   onlyROI  0:  check ROI and calculate
    %   onlyROI -1: don't check ROI just calculate
    
    
    %% set Path and file
    QNIDir=strcat(SampleDir,'\QNI');
    ImDir=strcat(QNIDir,'\RAW');
    NeutraDir=strcat(SampleDir,'\RAW');
    OutDir=strcat(QNIDir,'\RES');
    
    %path output
    outpath=OutDir;
    s=mkdir(outpath);
    s=mkdir(strcat(outpath,'\2_ROI'));
    s=mkdir(strcat(outpath,'\3_MC'));
    s=mkdir(strcat(outpath,'\1_IN'));
    
    fileEXT='.tif';
 
    xlsFile='Analyse.xls';
    
    %read Dry 
    fn=strcat(Sample,'_*.tif');
    Nini=imreadMean(ImDir,fn,3,1);
    
  
    
    if ~isempty(Nini)
        
      disp('***** Analyse Sample  ****');
      disp(Sample);
      
      [sy,sx]=size(Nini);
      Nend=imreadMean(ImDir,fn,-3,1);
      Black=zeros(sy,sx);
      XIM0=Black; XIM0(:,:)=1;
        
      DRY0=Nini;
      ImageShow(DRY0,'dry image after  ',[],1);

      if nargin<3
        onlyROI=0;
      end

      checkROI=1;
      if onlyROI==-1
        checkROI=0;
      end
      ROI=GetROI(DRY0,QNIDir,xlsFile,checkROI);
      [mcIni,mcX,mcY,mcM,IMout,IMout2]=AnalyseImageQNI(Black,Nini,XIM0,ROI,'T');
      [mcEnd,mcX,mcY,mcM,IMout,IMout2]=AnalyseImageQNI(Black,Nend,XIM0,ROI,'T');
      fnxls=strcat(QNIDir, '\',xlsFile);
      Tabn='ROI';
      row=10; ce=strcat('A',num2str(row));
      data={'weight ini [g]','weight end [g]'};
      data=datains(data,{mcIni,mcEnd},1);
      xlswrite(fnxls, data, Tabn,ce);
       


      if onlyROI <=0 
        mode='T';

        %% name for the excelsheet
        fnxls=strcat(QNIDir, '\',xlsFile);
        row=1;
        ce=strcat('A',num2str(row));
        % location on the sheet header
        data={'num','name','xoff','MinMax','time [s]','gray'};
        %write the header
        Tabn='RES';
        xlswrite(fnxls, data, Tabn,ce);
        %datafiled for excel data
        data={};




        %path Neutra image %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        [Flist,anz]=GetFiles(NeutraDir,'*.fits');
        % time stamp
        time0=FileDate(Flist(1).date);
        from=1;
        %from=anz-5;
        %anz=10;
        for f=from:anz
          close all;
          %remember the filename
          name=Flist(f).filename;
          disp(name);
          % take a numerical stamp to sort the results
          l=length(name);
          num=str2num(name(l-3:l));
          if num==51
            disp('break');
          end

          %read Original Image
          %fn=strcat(ImDir,'\',Flist(f).filename,'.tif');
          %XIM0=imReadDbl(fn); %Original


          %read massimage after QNI 
          fn=strcat(ImDir,'\',Flist(f).filename,'.tif');
          MIM0=imReadDbl(fn); %massimage
          fm=ImageShow(MIM0,'Mass [g]',[],1); % and show dh picture

          XIM0=MIM0;
          XIM0(:,:)=1;
          xoff=0;yoff=0;

          %% Xray
          hasXray=0;
          if hasXray
            %getxray
            fn=strcat(xraypath,'\',xrayFN(f).filename,'.tif');
            XIMr=imReadDbl(fn); %xrayation
            XIM0=XIMr;
            h = fspecial('average',3);
            %h = fspecial('disk',5);
            XIM0=imfilter(XIM0,h,'replicate');
            XIM0=65535-XIM0(:,:); % invers EW=white  LW=black
            if f==1
                BPyxX=[500,920];WPyxX=[500,200];HighLow=[-60000,65000];
                [XIM0,X_HighLow]=IntensityCorrection(XIM0,BPyxX,WPyxX,HighLow);
            else
                [XIM0]=IntensityCorrection(XIM0,BPyxX,WPyxX,X_HighLow);
            end   
            fx=ImageShow(XIM0,'X-ray');
          end


          %% Analysing the Neutron imageage  
          % mcT the total moister content 
          % mcX profile of moister content along X mean value of vertical pixels
          % mcY provile of moister content along Y mean value of horizontal pixels
          % mcM matix of moister content
          % IMout RGB neutron xray mask
          % IMout RGB neutron xray mask croped to ROI


          [mcT,mcX,mcY,mcM,IMout,IMout2]=AnalyseImageQNI(DRY0,MIM0,XIM0,ROI,mode);
          mmin=min(min(MIM0));
          mmax=max(max(MIM0));
          minmax=(mmax-mmin)*1E6;
          if  ~(20<minmax  && minmax<130)
            mcT=999;
            mcX(:)=0;
            mcY(:)=0;
            mcM(:,:)=0;
          end            



          %% calculate the time
          time=FileDate(Flist(f).date);
          if f==from
            Mass=zeros(size(IMout2,1),anz);
          end
          Mass(:,f)=mcY';

          time=int32((time-time0)*24*60*60+.0); %seconds

          data=datains(data,{num,name, xoff,minmax,time, mcT},1);

          if 1
            row=row+1;
            ce=strcat('A',num2str(row)); % location on the sheet
            xlswrite(fnxls, data, 'Res',ce);
            data={};
          end  



          %% output image files
          %fn=strcat(outpath,'\1_IN\',Flist(f).filename,'.tif');
          %imwrite(IMout,fn);
          %fn=strcat(outpath,'\2_ROI\',Flist(f).filename,'.tif');
          %mwrite(IMout2,fn);
          fn=strcat(outpath,'\3_MC\',Flist(f).filename,'.tif');
          MCout=ImageAdjust(mcM,0,0); 
          imwrite(MCout,fn);

        end

        if 0
          row=row+1;
          %wirte results to the excel sheet
          ce=strcat('A',num2str(row)); % location on the sheet
          xlswrite(fnxls, data, Tabn,ce);
        end  

        %%
        if 1 
          fn=strcat(outpath,'\','Mass','.tif');
          Mass(isinf(Mass))=0;
          Mass=ImageAdjust(Mass,2,0,3);
          imwrite(Mass,fn);
        end  

      end % only ROI
    end % empty  
end

